#!/usr/bin/env bash
set -euo pipefail

usage() { echo "MSH - MyShell Project Manager"; echo "Usage: msh -p <path>"; exit 1; }

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# Match middleware/security.js logic: parent of repo has 'projects'
PROJECTS_DIR="$(cd "$SCRIPT_DIR/.." && pwd)/projects"

[[ $# -eq 0 ]] && usage

project_path=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    -p) shift; [[ $# -gt 0 ]] || usage; project_path="$1"; shift ;;
    -h|--help) usage ;;
    *) echo "Unknown argument: $1" >&2; usage ;;
  esac
done

[[ -n "$project_path" ]] || usage

abs_path="$(cd "$project_path" 2>/dev/null && pwd || true)"
[[ -n "$abs_path" ]] || { echo "Error: Path does not exist: $project_path" >&2; exit 1; }
[[ -d "$abs_path" ]] || { echo "Error: Path is not a directory: $abs_path" >&2; exit 1; }

project_name="$(basename "$abs_path")"
target_path="$PROJECTS_DIR/$project_name"

mkdir -p "$PROJECTS_DIR"

if [[ -e "$target_path" ]]; then
  echo "Project '$project_name' already exists at $target_path"
  exit 0
fi

ln -s "$abs_path" "$target_path"
echo "Added project '$project_name' -> $abs_path"


