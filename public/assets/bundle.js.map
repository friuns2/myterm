{
  "version": 3,
  "sources": ["../../node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/WidthCache.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../../node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../../node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../../node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../../node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition", "../../node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts", "../../src/client/utils.ts", "../../src/client/state.ts", "../../src/client/terminal.ts", "../../node_modules/uhtml/dist/prod/dom.js", "../../src/client/files.ts", "../../src/client/projects.ts", "../../src/client/ui.ts", "../../src/client/environment.ts", "../../src/client/aliases.ts", "../../src/client/worktrees.ts", "../../src/client/main.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n", "// Utility functions for the web terminal application\n\nexport function stripAnsiCodes(text: string): string {\n  return text.replace(/\\x1b\\[[0-9;]*[a-zA-Z]/g, '');\n}\n\nexport function ansiToHtml(text: string): string {\n  const ansiColors: Record<string, string> = {\n    '30': 'color: #000000',\n    '31': 'color: #ff0000',\n    '32': 'color: #00ff00',\n    '33': 'color: #ffff00',\n    '34': 'color: #0000ff',\n    '35': 'color: #ff00ff',\n    '36': 'color: #00ffff',\n    '37': 'color: #ffffff',\n    '90': 'color: #808080',\n    '91': 'color: #ff8080',\n    '92': 'color: #80ff80',\n    '93': 'color: #ffff80',\n    '94': 'color: #8080ff',\n    '95': 'color: #ff80ff',\n    '96': 'color: #80ffff',\n    '97': 'color: #ffffff'\n  };\n\n  let result = text;\n  let openSpans = 0;\n\n  result = result.replace(/\\x1b\\[38;2;(\\d+);(\\d+);(\\d+)m/g, (_match, r, g, b) => {\n    openSpans++;\n    return `<span style=\"color: rgb(${r}, ${g}, ${b})\">`;\n  });\n\n  result = result.replace(/\\x1b\\[(\\d+)m/g, (_match, code) => {\n    if (code === '0' || code === 'm') {\n      const closeSpans = '</span>'.repeat(openSpans);\n      openSpans = 0;\n      return closeSpans;\n    }\n    if (ansiColors[code]) {\n      openSpans++;\n      return `<span style=\"${ansiColors[code]}\">`;\n    }\n    return '';\n  });\n\n  result = result.replace(/\\x1b\\[[0-9;]*[a-zA-Z]/g, '');\n  result += '</span>'.repeat(openSpans);\n  return result;\n}\n\nexport function getSessionIDFromURL(): string | null {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get('session');\n}\n\nexport function getProjectFromURL(): string | null {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get('project');\n}\n\nexport function updateURLWithSession(sessionId: string, projectName: string | null = null): void {\n  const url = new URL(window.location.href);\n  url.searchParams.set('session', sessionId);\n  if (projectName) {\n    url.searchParams.set('project', projectName);\n  }\n  window.history.pushState({ sessionId: sessionId }, '', url);\n}\n\nexport function clearURLParams(): void {\n  const url = new URL(window.location.href);\n  url.searchParams.delete('session');\n  url.searchParams.delete('project');\n  window.history.pushState({}, '', url);\n}\n\nexport function updateURLWithoutSession(): void {\n  clearURLParams();\n}\n\n\n", "// Shared client state\n\nexport type NullableString = string | null;\n\nexport const state = {\n  sessionID: null as NullableString,\n  currentProject: null as NullableString,\n  isFileBrowserOpen: false,\n  isFileEditorOpen: false,\n  currentEditingFile: null as NullableString,\n  currentBrowserPath: null as NullableString,\n  isConnected: false,\n};\n\n\n", "import { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { state } from './state';\nimport { updateURLWithSession } from './utils';\n\nlet terminal: Terminal | null = null;\nlet fitAddon: FitAddon | null = null;\nlet ws: WebSocket | null = null;\n\nlet reconnectAttempts = 0;\nconst MAX_RECONNECT_ATTEMPTS = 10;\nconst RECONNECT_BASE_DELAY_MS = 1000;\n\nfunction cleanupWebSocket(): void {\n  if (ws) {\n    ws.onopen = null;\n    ws.onmessage = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    if (ws.readyState === WebSocket.OPEN || ws.readyState === WebSocket.CONNECTING) {\n      ws.close();\n    }\n    ws = null;\n  }\n  state.isConnected = false;\n  reconnectAttempts = 0;\n}\n\nexport function cleanupTerminal(): void {\n  cleanupWebSocket();\n  if (terminal) {\n    terminal.dispose();\n    terminal = null;\n  }\n  fitAddon = null;\n}\n\nexport function getTerminal(): Terminal | null {\n  return terminal;\n}\n\nexport function connectWebSocket(): void {\n  cleanupWebSocket();\n\n  const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n  let url = `${protocol}//${window.location.host}`;\n\n  const params = new URLSearchParams();\n  if (state.sessionID) params.append('sessionID', state.sessionID);\n  if (state.currentProject) params.append('projectName', state.currentProject);\n  if (params.toString()) url += `?${params.toString()}`;\n\n  ws = new WebSocket(url);\n\n  ws.onopen = () => {\n    state.isConnected = true;\n    reconnectAttempts = 0;\n    if (terminal && state.sessionID) {\n      // Force redraw after reconnect\n      // @ts-expect-error xterm private API exists in runtime\n      terminal.clearTextureAtlas?.();\n      terminal.refresh(0, (terminal.rows || 1) - 1);\n    }\n    if (terminal && ws) {\n      ws.send(\n        JSON.stringify({ type: 'resize', cols: terminal.cols, rows: terminal.rows })\n      );\n    }\n  };\n\n  ws.onmessage = (event: MessageEvent) => {\n    try {\n      const message = JSON.parse(event.data);\n      switch (message.type) {\n        case 'output':\n          terminal?.write(message.data);\n          break;\n        case 'sessionID':\n          state.sessionID = message.sessionID;\n          updateURLWithSession(message.sessionID, state.currentProject);\n          break;\n        case 'exit':\n          terminal?.write(`\\r\\nProcess exited with code: ${message.exitCode}\\r\\n`);\n          terminal?.write('Connection closed. Go back to session list.\\r\\n');\n          state.isConnected = false;\n          break;\n        default:\n          // ignore\n          break;\n      }\n    } catch (e) {\n      console.error('Error parsing message:', e);\n    }\n  };\n\n  ws.onclose = () => {\n    state.isConnected = false;\n    if (reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\n      const delay = RECONNECT_BASE_DELAY_MS * Math.pow(2, reconnectAttempts);\n      reconnectAttempts++;\n      terminal?.write(`\\r\\nConnection lost. Attempting to reconnect...\\r\\n`);\n      setTimeout(connectWebSocket, delay);\n    } else {\n      terminal?.write('\\r\\nConnection lost. Max reconnect attempts reached. Go back to session list.\\r\\n');\n    }\n  };\n\n  ws.onerror = () => {\n    terminal?.write('\\r\\nWebSocket error occurred. Attempting to reconnect.\\r\\n');\n    ws?.close();\n  };\n}\n\nexport function initializeTerminal(): void {\n  const container = document.getElementById('terminal-container');\n  if (!container) return;\n  container.innerHTML = `\n    <div class=\"flex flex-col h-full\">\n      <div id=\"terminal\" class=\"flex-1\"></div>\n    </div>\n  `;\n\n  if (terminal) terminal.dispose();\n  terminal = new Terminal({\n    cursorBlink: true,\n    fontFamily: 'Courier New, monospace',\n    fontSize: 14,\n    theme: {\n      background: '#000000',\n      foreground: '#00ff00',\n      cursor: '#00ff00',\n      cursorAccent: '#000000',\n      selection: 'rgba(0, 255, 0, 0.3)'\n    },\n    allowTransparency: false\n  });\n\n  fitAddon = new FitAddon();\n  terminal.loadAddon(fitAddon);\n\n  const element = document.getElementById('terminal');\n  if (!element) return;\n  terminal.open(element);\n  fitAddon.fit();\n\n  terminal.onData((data) => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify({ type: 'input', data }));\n    }\n  });\n\n  terminal.focus();\n  connectWebSocket();\n\n  const showNavigationBar = (window as any).showNavigationBar as (() => void) | undefined;\n  if (showNavigationBar) showNavigationBar();\n}\n\nexport function resizeTerminal(): void {\n  if (fitAddon) fitAddon.fit();\n  if (state.isConnected && terminal && ws && ws.readyState === WebSocket.OPEN) {\n    ws.send(JSON.stringify({ type: 'resize', cols: terminal.cols, rows: terminal.rows }));\n  }\n}\n\nexport function getWebSocket(): WebSocket | null {\n  return ws;\n}\n\n\n", "var e;!function(e){e[e.None=0]=\"None\",e[e.Mutable=1]=\"Mutable\",e[e.Watching=2]=\"Watching\",e[e.RecursedCheck=4]=\"RecursedCheck\",e[e.Recursed=8]=\"Recursed\",e[e.Dirty=16]=\"Dirty\",e[e.Pending=32]=\"Pending\"}(e||(e={}));const t=[],n=[],{link:s,unlink:i,propagate:r,checkDirty:o,endTracking:l,startTracking:a,shallowPropagate:c}=function({update:e,notify:t,unwatched:n}){let s=0;return{link:function(e,t){const n=t.depsTail;if(void 0!==n&&n.dep===e)return;let i;if(4&t.flags&&(i=void 0!==n?n.nextDep:t.deps,void 0!==i&&i.dep===e))return i.version=s,void(t.depsTail=i);const r=e.subsTail;if(void 0!==r&&r.version===s&&r.sub===t)return;const o=t.depsTail=e.subsTail={version:s,dep:e,sub:t,prevDep:n,nextDep:i,prevSub:r,nextSub:void 0};void 0!==i&&(i.prevDep=o);void 0!==n?n.nextDep=o:t.deps=o;void 0!==r?r.nextSub=o:e.subs=o},unlink:i,propagate:function(e){let n,s=e.nextSub;e:for(;;){const i=e.sub;let r=i.flags;if(3&r&&(60&r?12&r?4&r?48&r||!o(e,i)?r=0:(i.flags=40|r,r&=1):i.flags=-9&r|32:r=0:i.flags=32|r,2&r&&t(i),1&r)){const t=i.subs;if(void 0!==t){e=t,void 0!==t.nextSub&&(n={value:s,prev:n},s=e.nextSub);continue}}if(void 0===(e=s)){for(;void 0!==n;)if(e=n.value,n=n.prev,void 0!==e){s=e.nextSub;continue e}break}s=e.nextSub}},checkDirty:function(t,n){let s,i=0;e:for(;;){const o=t.dep,l=o.flags;let a=!1;if(16&n.flags)a=!0;else if(17&~l){if(!(33&~l)){void 0===t.nextSub&&void 0===t.prevSub||(s={value:t,prev:s}),t=o.deps,n=o,++i;continue}}else if(e(o)){const e=o.subs;void 0!==e.nextSub&&r(e),a=!0}if(a||void 0===t.nextDep){for(;i;){--i;const o=n.subs,l=void 0!==o.nextSub;if(l?(t=s.value,s=s.prev):t=o,a){if(e(n)){l&&r(o),n=t.sub;continue}}else n.flags&=-33;if(n=t.sub,void 0!==t.nextDep){t=t.nextDep;continue e}a=!1}return a}t=t.nextDep}},endTracking:function(e){const t=e.depsTail;let n=void 0!==t?t.nextDep:e.deps;for(;void 0!==n;)n=i(n,e);e.flags&=-5},startTracking:function(e){++s,e.depsTail=void 0,e.flags=-57&e.flags|4},shallowPropagate:r};function i(e,t=e.sub){const s=e.dep,i=e.prevDep,r=e.nextDep,o=e.nextSub,l=e.prevSub;return void 0!==r?r.prevDep=i:t.depsTail=i,void 0!==i?i.nextDep=r:t.deps=r,void 0!==o?o.prevSub=l:s.subsTail=l,void 0!==l?l.nextSub=o:void 0===(s.subs=o)&&n(s),r}function r(e){do{const n=e.sub,s=e.nextSub,i=n.flags;32==(48&i)&&(n.flags=16|i,2&i&&t(n)),e=s}while(void 0!==e)}function o(e,t){const n=t.depsTail;if(void 0!==n){let s=t.deps;do{if(s===e)return!0;if(s===n)break;s=s.nextDep}while(void 0!==s)}return!1}}({update:e=>\"getter\"in e?y(e):w(e,e.value),notify:function e(t){const s=t.flags;if(!(64&s)){t.flags=64|s;const i=t.subs;void 0!==i?e(i.sub):n[h++]=t}},unwatched(e){if(\"getter\"in e){let t=e.deps;if(void 0!==t){e.flags=17;do{t=i(t,e)}while(void 0!==t)}}else\"previousValue\"in e||D.call(e)}});let u,d,f=0,p=0,h=0;function v(e){const t=u;return u=e,t}function g(e){const t=d;return d=e,t}function b(e){return T.bind({previousValue:e,value:e,subs:void 0,subsTail:void 0,flags:1})}function m(e){return C.bind({value:void 0,subs:void 0,subsTail:void 0,deps:void 0,depsTail:void 0,flags:17,getter:e})}function x(e){const t={fn:e,subs:void 0,subsTail:void 0,deps:void 0,depsTail:void 0,flags:2};void 0!==u?s(t,u):void 0!==d&&s(t,d);const n=v(t);try{t.fn()}finally{v(n)}return D.bind(t)}function y(e){const t=v(e);a(e);try{const t=e.value;return t!==(e.value=e.getter(t))}finally{v(t),l(e)}}function w(e,t){return e.flags=1,e.previousValue!==(e.previousValue=t)}function S(e,t){if(16&t||32&t&&o(e.deps,e)){const t=v(e);a(e);try{e.fn()}finally{v(t),l(e)}return}32&t&&(e.flags=-33&t);let n=e.deps;for(;void 0!==n;){const e=n.dep,t=e.flags;64&t&&S(e,e.flags=-65&t),n=n.nextDep}}function k(){for(;p<h;){const e=n[p];n[p++]=void 0,S(e,e.flags&=-65)}p=0,h=0}function C(){const e=this.flags;if(16&e||32&e&&o(this.deps,this)){if(y(this)){const e=this.subs;void 0!==e&&c(e)}}else 32&e&&(this.flags=-33&e);return void 0!==u?s(this,u):void 0!==d&&s(this,d),this.value}function T(...e){if(!e.length){const e=this.value;if(16&this.flags&&w(this,e)){const e=this.subs;void 0!==e&&c(e)}return void 0!==u&&s(this,u),e}{const t=e[0];if(this.value!==(this.value=t)){this.flags=17;const e=this.subs;void 0!==e&&(r(e),f||k())}}}function D(){let e=this.deps;for(;void 0!==e;)e=i(e,this);const t=this.subs;void 0!==t&&i(t),this.flags=0}const O={greedy:!1},N=e=>new A(e),$=e=>{t.push(v(void 0));try{return e()}finally{v(t.pop())}};class W{constructor(e,t){this._=e(t)}get value(){return this._()}set value(e){this._(e)}peek(){return $(this._)}valueOf(){return this.value}}class A extends W{constructor(e){super(m,e)}get value(){return this._()}set value(e){throw new Error(\"Computed values are read-only\")}}class E extends W{constructor(e){super(b,[e])}get value(){return super.value[0]}set value(e){super.value=[e]}peek(){return super.peek()[0]}}const M=e=>{++f;try{return e()}finally{--f||k()}};let R=(e,{greedy:t=!1}=O)=>t?new E(e):new W(b,e);function L(){return R.apply(null,arguments)}const _=e=>{R=e},{isArray:j}=Array,{assign:F,defineProperties:P,entries:B,freeze:J}=Object;class V{#e;constructor(e){this.#e=e}valueOf(){return this.#e}toString(){return String(this.#e)}}const z=e=>new V(e),H=e=>document.createComment(e),q=42,G=new Set([\"plaintext\",\"script\",\"style\",\"textarea\",\"title\",\"xmp\"]),I=new Set([\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"menuitem\",\"meta\",\"param\",\"source\",\"track\",\"wbr\"]),K=J({}),Q=J([]),U=(e,t)=>(e.children===Q&&(e.children=[]),e.children.push(t),t.parent=e,t),X=(e,t,n)=>{e.props===K&&(e.props={}),e.props[t]=n},Y=(e,t,n)=>{e!==t&&n.push(e)};class Z{constructor(e){this.type=e,this.parent=null}toJSON(){return[this.type,this.data]}}class ee extends Z{constructor(e){super(8),this.data=e}toString(){return`\\x3c!--${this.data}--\\x3e`}}class te extends Z{constructor(e){super(10),this.data=e}toString(){return`<!${this.data}>`}}class ne extends Z{constructor(e){super(3),this.data=e}toString(){return this.data}}class se extends Z{constructor(){super(q),this.name=\"template\",this.props=K,this.children=Q}toJSON(){const e=[q];return Y(this.props,K,e),Y(this.children,Q,e),e}toString(){let e=\"\";for(const t in this.props){const n=this.props[t];null!=n&&(\"boolean\"==typeof n?n&&(e+=` ${t}`):e+=` ${t}=\"${n}\"`)}return`<template${e}>${this.children.join(\"\")}</template>`}}class ie extends Z{constructor(e,t=!1){super(1),this.name=e,this.xml=t,this.props=K,this.children=Q}toJSON(){const e=[1,this.name,+this.xml];return Y(this.props,K,e),Y(this.children,Q,e),e}toString(){const{xml:e,name:t,props:n,children:s}=this,{length:i}=s;let r=`<${t}`;for(const t in n){const s=n[t];null!=s&&(\"boolean\"==typeof s?s&&(r+=e?` ${t}=\"\"`:` ${t}`):r+=` ${t}=\"${s}\"`)}if(i){r+=\">\";for(let n=!e&&G.has(t),o=0;o<i;o++)r+=n?s[o].data:s[o];r+=`</${t}>`}else r+=e?\" />\":I.has(t)?\">\":`></${t}>`;return r}}class re extends Z{constructor(){super(11),this.name=\"#fragment\",this.children=Q}toJSON(){const e=[11];return Y(this.children,Q,e),e}toString(){return this.children.join(\"\")}}const oe=\"\\0\",le=`\"${oe}\"`,ae=`'${oe}'`,ce=/\\x00|<[^><\\s]+/g,ue=/([^\\s/>=]+)(?:=(\\x00|(?:(['\"])[\\s\\S]*?\\3)))?/g,de=(e,t,n,s,i)=>[t,n,s],fe=e=>{const t=[];for(;e.parent;){switch(e.type){case q:case 1:\"template\"===e.name&&t.push(-1)}t.push(e.parent.children.indexOf(e)),e=e.parent}return t},pe=(e,t)=>{do{e=e.parent}while(t.has(e));return e};const he=(e,t)=>t<0?e.content:e.childNodes[t];var ve=(e,t)=>t.reduceRight(he,e);let ge,be=!1;const me=({firstChild:e,lastChild:t})=>{const n=ge||(ge=document.createRange());return n.setStartAfter(e),n.setEndAfter(t),n.deleteContents(),e},xe=(e,t)=>be&&11===e.nodeType?1/t<0?t?me(e):e.lastChild:t?e.valueOf():e.firstChild:e,ye=Symbol(\"nodes\"),we={get(){return this.firstChild.parentNode}},Se={value(e){me(this).replaceWith(e)}},ke={value(){me(this).remove()}},Ce={value(){const{parentNode:e}=this;if(e===this)this[ye]===Q&&(this[ye]=[...this.childNodes]);else{if(e){let{firstChild:e,lastChild:t}=this;for(this[ye]=[e];e!==t;)this[ye].push(e=e.nextSibling)}this.replaceChildren(...this[ye])}return this}};function Te(e){const t=H(\"<>\"),n=H(\"</>\");return e.replaceChildren(t,...e.childNodes,n),be=!0,P(e,{[ye]:{writable:!0,value:Q},firstChild:{value:t},lastChild:{value:n},parentNode:we,valueOf:Ce,replaceWith:Se,remove:ke})}Te.prototype=DocumentFragment.prototype;const De=16,Oe=32768,Ne=((e=globalThis.document)=>{let t,n=e.createElement(\"template\");return(s,i=!1)=>{if(i)return t||(t=e.createRange(),t.selectNodeContents(e.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"))),t.createContextualFragment(s);n.innerHTML=s;const r=n.content;return n=n.cloneNode(!1),r}})(document),$e=Symbol(\"ref\"),We=(e,t)=>{for(const[n,s]of B(t)){const t=\"role\"===n?n:`aria-${n.toLowerCase()}`;null==s?e.removeAttribute(t):e.setAttribute(t,s)}},Ae=e=>(t,n)=>{null==n?t.removeAttribute(e):t.setAttribute(e,n)},Ee=(e,t)=>{e[ye]=((e,t,n,s)=>{const i=s.parentNode,r=t.length;let o=e.length,l=r,a=0,c=0,u=null;for(;a<o||c<l;)if(o===a){const e=l<r?c?n(t[c-1],-0).nextSibling:n(t[l],0):s;for(;c<l;)i.insertBefore(n(t[c++],1),e)}else if(l===c)for(;a<o;)u&&u.has(e[a])||n(e[a],-1).remove(),a++;else if(e[a]===t[c])a++,c++;else if(e[o-1]===t[l-1])o--,l--;else if(e[a]===t[l-1]&&t[c]===e[o-1]){const s=n(e[--o],-0).nextSibling;i.insertBefore(n(t[c++],1),n(e[a++],-0).nextSibling),i.insertBefore(n(t[--l],1),s),e[o]=t[l]}else{if(!u){u=new Map;let e=c;for(;e<l;)u.set(t[e],e++)}const s=u.get(e[a])??-1;if(s<0)n(e[a++],-1).remove();else if(c<s&&s<l){let r=a,d=1;for(;++r<o&&r<l&&u.get(e[r])===s+d;)d++;if(d>s-c){const r=n(e[a],0);for(;c<s;)i.insertBefore(n(t[c++],1),r)}else i.replaceChild(n(t[c++],1),n(e[a++],-1))}else a++}return t})(e[ye]||Q,t,xe,e)},Me=new WeakMap,Re=(e,t)=>{const n=\"object\"==typeof t?t??e:((e,t)=>{let n=Me.get(e);return n?n.data=t:Me.set(e,n=document.createTextNode(t)),n})(e,t),s=e[ye]??e;n!==s&&s.replaceWith(xe(e[ye]=n,1))},Le=(e,t)=>{Re(e,t instanceof W?t.value:t)},_e=({dataset:e},t)=>{for(const[n,s]of B(t))null==s?delete e[n]:e[n]=s},je=new Map,Fe=e=>{let t=je.get(e);return t||je.set(e,t=Pe(e)),t},Pe=e=>(t,n)=>{t[e]=n},Be=(e,t)=>{for(const[n,s]of B(t))Ae(n)(e,s)},Je=(e,t,n)=>n?(n,s)=>{const i=n[t];i?.length&&n.removeEventListener(e,...i),s&&n.addEventListener(e,...s),n[t]=s}:(n,s)=>{const i=n[t];i&&n.removeEventListener(e,i),s&&n.addEventListener(e,s),n[t]=s},Ve=e=>(t,n)=>{t.toggleAttribute(e,!!n)};let ze=!1;let He=!0;const qe=e=>{He=e},Ge=()=>He,Ie=e=>xe(e.n?e.update(e):e.valueOf(!1),1),Ke=(e,t)=>{const n=[],s=e.length,i=t.length;for(let r,o,l=0,a=0;a<i;a++)r=t[a],n[a]=l<s&&(o=e[l++]).t===r.t?(t[a]=o).update(r):r.valueOf(!1);return n},Qe=(e,t,n)=>{const s=R,i=n.length;let r=0;_(e=>r<i?n[r++]:n[r++]=e instanceof W?e:s(e));const o=Ge();o&&qe(!o);try{return e(t,Ze)}finally{o&&qe(o),_(s)}},Ue=(e,t)=>(e.t===t.t?e.update(t):(e.n.replaceWith(Ie(t)),e=t),e),Xe=(e,t,n)=>{let s,i=[],r=[De,null,n],o=!0;return x(()=>{if(o)o=!1,s=Qe(t,n,i),i.length||(i=Q),s?(e.replaceWith(Ie(s)),r[1]=s):e.remove();else{const e=Qe(t,n,i);s&&Ue(s,e)===e&&(r[2]=s=e)}}),r},Ye=Symbol(),Ze={};class et{constructor(e,t){this.t=e,this.v=t,this.n=null,this.k=-1}valueOf(e=Ge()){const[t,n,s]=this.t,i=document.importNode(t,!0),r=this.v;let o,l,a,c=r.length,u=Q;if(0<c){for(u=n.slice(0);c--;){const[t,s,d]=n[c],f=r[c];if(l!==t&&(o=ve(i,t),l=t),d&De){const e=o[Ye]||(o[Ye]={});if(d===De){for(const{name:t,value:n}of o.attributes)e[t]??=n;e.children??=[...o.content.childNodes],u[c]=Xe(o,f,e)}else s(e,f),u[c]=[d,s,e]}else{let t=!0;e||!(8&d)||d&Oe||(1&d?(t=!1,f.length&&s(o,f[0]instanceof et?Ke(Q,f):f)):f instanceof et&&(t=!1,s(o,Ie(f)))),t&&(512===d?this.k=c:(16384===d&&(a??=new Set).add(o),s(o,f))),u[c]=[d,s,f,o],e&&8&d&&o.remove()}}a&&(e=>{for(const t of e){const e=t[$e];\"function\"==typeof e?e(t):e instanceof W?e.value=t:e&&(e.current=t)}})(a)}const{childNodes:d}=i,f=d.length,p=1===f?d[0]:f?Te(i):i;return this.v=u,this.n=p,-1<this.k&&s.set(u[this.k][2],p,this),p}update(e){const t=this.k,n=this.v,s=e.v;if(-1<t&&n[t][2]!==s[t])return((e,t)=>e.t[2].get(t)?.update(e)??e.valueOf(!1))(e,s[t]);let{length:i}=n;for(;i--;){const e=n[i],[t,r,o]=e;if(512===t)continue;let l=s[i];if(t&De)if(t===De){const t=l(o,Ze);r&&Ue(r,t)===t&&(e[2]=t)}else r(o,l);else{let n=l;if(1&t){if(8&t)l.length&&l[0]instanceof et&&(n=Ke(o,l));else if(256&t&&l[0]===o[0])continue}else if(8&t)if(t&Oe){if(l===o){r(e[3],n);continue}}else o instanceof et&&(l=Ue(o,l),n=l.n);l!==o&&(e[2]=l,r(e[3],n))}}return this.n}}const tt=new WeakMap;class nt extends Map{constructor(){super()._=new FinalizationRegistry(e=>this.delete(e))}get(e){const t=super.get(e)?.deref();return t&&tt.get(t)}set(e,t,n){tt.set(t,n),this._.register(t,e),super.set(e,new WeakRef(t))}}const st=(({Comment:e=ee,DocumentType:t=te,Text:n=ne,Fragment:s=re,Element:i=ie,Component:r=se,update:o=de})=>(l,a,c)=>{const u=l.join(oe).trim(),d=new Set,f=[];let p=new s,h=0,v=0,g=0,b=Q;for(const s of u.matchAll(ce)){if(0<v){v--;continue}const l=s[0],m=s.index;if(h<m&&U(p,new n(u.slice(h,m))),l===oe){\"table\"===p.name&&(p=U(p,new i(\"tbody\",c)),d.add(p));const t=U(p,new e(\"\u25E6\"));f.push(o(t,8,fe(t),\"\",a[g++])),h=m+1}else if(l.startsWith(\"<!\")){const n=u.indexOf(\">\",m+2);if(\"--\\x3e\"===u.slice(n-2,n+1)){const t=u.slice(m+4,n-2);\"!\"===t[0]&&U(p,new e(t.slice(1).replace(/!$/,\"\")))}else U(p,new t(u.slice(m+2,n)));h=n+1}else if(l.startsWith(\"</\")){const e=u.indexOf(\">\",m+2);c&&\"svg\"===p.name&&(c=!1),p=pe(p,d),h=e+1}else{const e=m+l.length,t=u.indexOf(\">\",e),s=l.slice(1);let x=s;if(s===oe?(x=\"template\",p=U(p,new r),b=fe(p).slice(1),f.push(o(p,q,b,\"\",a[g++]))):(c||(x=x.toLowerCase(),\"table\"!==p.name||\"tr\"!==x&&\"td\"!==x||(p=U(p,new i(\"tbody\",c)),d.add(p)),\"tbody\"===p.name&&\"td\"===x&&(p=U(p,new i(\"tr\",c)),d.add(p))),p=U(p,new i(x,!!c&&\"svg\"!==x)),b=Q),e<t){let n=!1;for(const[s,i,r]of u.slice(e,t).matchAll(ue))if(r===oe||r===le||r===ae||(n=i.endsWith(oe))){const e=b===Q?b=fe(p):b;f.push(o(p,2,e,n?i.slice(0,-1):i,a[g++])),n=!1,v++}else X(p,i,!r||r.slice(1,-1));b=Q}h=t+1;const y=0<t&&\"/\"===u[t-1];if(c)y&&(p=p.parent);else if(y||I.has(x))p=y?pe(p,d):p.parent;else if(\"svg\"===x)c=!0;else if(G.has(x)){const e=u.indexOf(`</${s}>`,h),t=u.slice(h,e);t.trim()===oe?(v++,f.push(o(p,3,fe(p),\"\",a[g++]))):U(p,new n(t)),p=p.parent,h=e+s.length+3,v++;continue}}}return h<u.length&&U(p,new n(u.slice(h))),[p,f]})({Comment:ee,DocumentType:te,Text:ne,Fragment:re,Element:ie,Component:se,update:(e,t,n,s,i)=>{switch(t){case q:return[n,i,De];case 8:return j(i)?[n,Ee,9]:i instanceof V?[n,(r=e.xml,(e,t)=>{const n=e[$e]??(e[$e]={});n.v!==t&&(n.f=Te(Ne(t,r)),n.v=t),Re(e,n.f)}),8192]:i instanceof W?[n,Le,32776]:[n,Re,8];case 3:return[n,Fe(\"textContent\"),2048];case 2:{const t=e.type===q;switch(s.at(0)){case\"@\":{const e=j(i);return[n,Je(s.slice(1),Symbol(s),e),e?257:256]}case\"?\":return[n,Ve(s.slice(1)),4096];case\".\":return\"...\"===s?[n,t?F:Be,t?144:128]:[n,Pe(s.slice(1)),t?80:64];default:return t?[n,Pe(s),1040]:\"aria\"===s?[n,We,2]:\"data\"!==s||/^object$/i.test(e.name)?\"key\"===s?[n,ze=!0,512]:\"ref\"===s?[n,Fe($e),16384]:s.startsWith(\"on\")?[n,Fe(s.toLowerCase()),64]:[n,Ae(s),4]:[n,_e,32]}}}var r}}),it=(e,t=new WeakMap)=>(n,...s)=>{let i=t.get(n);return i||(i=st(n,s,e),i.push((()=>{const e=ze;return ze=!1,e})()?new nt:null),i[0]=Ne(i[0].toString(),e),t.set(n,i)),new et(i,s)},rt=it(!1),ot=it(!0),lt=new WeakMap;function at(e,...t){const n=rt.apply(null,arguments);return Ge()?n.valueOf(!0):n}function ct(e,...t){const n=ot.apply(null,arguments);return Ge()?n.valueOf(!0):n}const ut=(e,t)=>{const n=lt.get(e);if(n&&n[0](),\"function\"==typeof t){let i;qe(!1);const r=function(e){const t={deps:void 0,depsTail:void 0,subs:void 0,subsTail:void 0,flags:0};void 0!==d&&s(t,d);const n=v(void 0),i=g(t);try{e()}finally{g(i),v(n)}return D.bind(t)}(()=>{i=t()});if(n&&n[1].t===i.t)n[1].update(i);else{const t=i.valueOf(!1);e.replaceChildren(t)}lt.set(e,[r,i])}else qe(!0),lt.delete(e),e.replaceChildren(t instanceof et?Ie(t):xe(t,1));return e};export{et as Hole,M as batch,N as computed,x as effect,Ne as fragment,at as html,ut as render,L as signal,ct as svg,z as unsafe,$ as untracked};\n", "import { state } from './state';\nimport { html, render } from 'uhtml';\n\ntype DirectoryItem = { name: string; type: 'directory' | 'file'; path: string };\ntype BrowseResponse = {\n  currentPath: string;\n  parentPath: string;\n  items: DirectoryItem[];\n};\n\nexport async function toggleFileBrowser(): Promise<void> {\n  const fileBrowser = document.getElementById('file-browser');\n  if (!fileBrowser) return;\n  if (state.isFileBrowserOpen) {\n    fileBrowser.classList.add('hidden');\n    fileBrowser.classList.remove('flex', 'fullscreen');\n    state.isFileBrowserOpen = false;\n  } else {\n    fileBrowser.classList.remove('hidden');\n    fileBrowser.classList.add('flex', 'fullscreen');\n    state.isFileBrowserOpen = true;\n    const initialPath = state.currentProject ? `../projects/${state.currentProject}` : '~';\n    await loadDirectory(initialPath);\n  }\n}\n\nexport async function loadDirectory(dirPath: string): Promise<void> {\n  try {\n    const response = await fetch(`/api/browse?path=${encodeURIComponent(dirPath)}`);\n    const data: BrowseResponse = await response.json();\n    if (!response.ok) throw new Error((data as any).error || 'Failed to load directory');\n    state.currentBrowserPath = data.currentPath;\n    displayDirectoryContents(data);\n    const currentDirInput = document.getElementById('current-dir') as HTMLInputElement | null;\n    if (currentDirInput) currentDirInput.value = data.currentPath;\n  } catch (error: any) {\n    console.error('Error loading directory:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Failed to load directory: ' + error.message, icon: 'error' });\n  }\n}\n\nexport function displayDirectoryContents(data: BrowseResponse): void {\n  const fileList = document.getElementById('file-list');\n  if (!fileList) return;\n  const Item = (item: DirectoryItem) => html`<div class=\"file-item p-2 rounded cursor-pointer flex items-center gap-2 text-sm\" onclick=${() => (item.type === 'directory' ? loadDirectory(item.path) : openFileInEditor(item.path))}>\n    <span class=\"text-lg\">${item.type === 'directory' ? '\uD83D\uDCC1' : '\uD83D\uDCC4'}</span>\n    <span class=\"flex-1 truncate\" title=${item.name}>${item.name.length > 25 ? item.name.substring(0, 22) + '...' : item.name}</span>\n  </div>`;\n  render(\n    fileList,\n    html`<div>\n      ${data.parentPath && data.parentPath !== data.currentPath ? Item({ name: '..', type: 'directory', path: data.parentPath }) : null}\n      ${data.items.map((i) => Item(i))}\n    </div>`\n  );\n}\n\nexport function createFileItem(_item: DirectoryItem): HTMLDivElement {\n  // Legacy function no longer used; kept for API compatibility if referenced.\n  const placeholder = document.createElement('div');\n  return placeholder;\n}\n\nexport async function openFileInEditor(filePath: string): Promise<void> {\n  try {\n    const response = await fetch(`/api/file?path=${encodeURIComponent(filePath)}`);\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to load file');\n    state.currentEditingFile = data.path;\n    const fileEditor = document.getElementById('file-editor');\n    fileEditor?.classList.remove('hidden');\n    fileEditor?.classList.add('flex', 'fullscreen');\n    state.isFileEditorOpen = true;\n    const fileContent = document.getElementById('file-content') as HTMLTextAreaElement | null;\n    const editorFilename = document.getElementById('editor-filename');\n    if (fileContent) fileContent.value = data.content;\n    if (editorFilename) editorFilename.textContent = filePath.split('/').pop() || '';\n  } catch (error: any) {\n    console.error('Error opening file:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Failed to open file: ' + error.message, icon: 'error' });\n  }\n}\n\nexport async function saveCurrentFile(): Promise<void> {\n  if (!state.currentEditingFile) {\n    await (window as any).Swal.fire({ title: 'Warning', text: 'No file is currently being edited', icon: 'warning' });\n    return;\n  }\n  try {\n    const fileContent = document.getElementById('file-content') as HTMLTextAreaElement | null;\n    const content = fileContent?.value || '';\n    const response = await fetch('/api/file', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ path: state.currentEditingFile, content })\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to save file');\n    const saveButton = document.getElementById('save-file');\n    if (saveButton) {\n      const originalText = saveButton.textContent || 'Save';\n      saveButton.textContent = 'Saved!';\n      saveButton.classList.add('btn-success');\n      setTimeout(() => {\n        saveButton.textContent = originalText;\n        saveButton.classList.remove('btn-success');\n      }, 1000);\n    }\n  } catch (error: any) {\n    console.error('Error saving file:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Failed to save file: ' + error.message, icon: 'error' });\n  }\n}\n\nexport function closeFileEditor(): void {\n  const fileEditor = document.getElementById('file-editor');\n  fileEditor?.classList.add('hidden');\n  fileEditor?.classList.remove('flex', 'fullscreen');\n  state.isFileEditorOpen = false;\n  state.currentEditingFile = null;\n}\n\nexport function closeFileBrowser(): void {\n  const fileBrowser = document.getElementById('file-browser');\n  fileBrowser?.classList.add('hidden');\n  fileBrowser?.classList.remove('flex', 'fullscreen');\n  state.isFileBrowserOpen = false;\n}\n\nexport function createNewFile(): void {\n  const modal = document.getElementById('new-file-modal') as HTMLDialogElement | null;\n  const input = document.getElementById('new-file-name') as HTMLInputElement | null;\n  if (!modal || !input) return;\n  input.value = '';\n  modal.showModal();\n  input.focus();\n}\n\nexport function createNewFolder(): void {\n  const modal = document.getElementById('new-folder-modal') as HTMLDialogElement | null;\n  const input = document.getElementById('new-folder-name') as HTMLInputElement | null;\n  if (!modal || !input) return;\n  input.value = '';\n  modal.showModal();\n  input.focus();\n}\n\nexport async function handleFileCreation(): Promise<void> {\n  const input = document.getElementById('new-file-name') as HTMLInputElement | null;\n  const fileName = (input?.value || '').trim();\n  if (!fileName) return;\n  if (!state.currentBrowserPath) {\n    await (window as any).Swal.fire({ title: 'Warning', text: 'No directory selected', icon: 'warning' });\n    return;\n  }\n  const filePath = `${state.currentBrowserPath}/${fileName}`;\n  try {\n    const response = await fetch('/api/file', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ path: filePath, content: '' })\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to create file');\n    await loadDirectory(state.currentBrowserPath);\n    await openFileInEditor(filePath);\n    (document.getElementById('new-file-modal') as HTMLDialogElement | null)?.close();\n  } catch (error: any) {\n    console.error('Error creating file:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Failed to create file: ' + error.message, icon: 'error' });\n  }\n}\n\nexport async function handleFolderCreation(): Promise<void> {\n  const input = document.getElementById('new-folder-name') as HTMLInputElement | null;\n  const folderName = (input?.value || '').trim();\n  if (!folderName) return;\n  if (!state.currentBrowserPath) {\n    await (window as any).Swal.fire({ title: 'Warning', text: 'No directory selected', icon: 'warning' });\n    return;\n  }\n  const folderPath = `${state.currentBrowserPath}/${folderName}`;\n  try {\n    const response = await fetch('/api/folder', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ path: folderPath })\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.error || 'Failed to create folder');\n    await loadDirectory(state.currentBrowserPath);\n    (document.getElementById('new-folder-modal') as HTMLDialogElement | null)?.close();\n  } catch (error: any) {\n    console.error('Error creating folder:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Failed to create folder: ' + error.message, icon: 'error' });\n  }\n}\n\n\n", "import { ansiToHtml, stripAnsiCodes } from './utils';\nimport { state } from './state';\nimport { cleanupTerminal, initializeTerminal } from './terminal';\nimport { render, html } from 'uhtml';\n\nexport function goBackToSessionList(): void {\n  if (typeof (window as any).cleanupTerminal === 'function') {\n    (window as any).cleanupTerminal();\n  }\n  state.sessionID = null;\n  state.currentProject = null;\n  if (typeof (window as any).updateURLWithoutSession === 'function') {\n    (window as any).updateURLWithoutSession();\n  }\n  showSessionsAndProjectsList();\n}\n\nexport function goBackToProjectList(): void {\n  if (typeof (window as any).cleanupTerminal === 'function') {\n    (window as any).cleanupTerminal();\n  }\n  state.sessionID = null;\n  state.currentProject = null;\n  showSessionsAndProjectsList();\n}\n\nexport async function showSessionsAndProjectsList(): Promise<void> {\n  const hideNavigationBar = (window as any).hideNavigationBar as (() => void) | undefined;\n  if (hideNavigationBar) hideNavigationBar();\n\n  try {\n    const [sessionsResponse, projectsResponse] = await Promise.all([\n      fetch('/api/sessions'),\n      fetch('/api/projects-with-worktrees')\n    ]);\n    const allSessions = await sessionsResponse.json();\n    const projectsWithWorktrees = await projectsResponse.json();\n\n    const terminalContainer = document.getElementById('terminal-container');\n    if (!terminalContainer) return;\n\n    const SessionCard = (session: any) => html`\n      <div class=\"card bg-base-200 shadow-lg hover:shadow-xl transition-shadow\">\n        <div class=\"card-body p-4\">\n          <div class=\"flex justify-between items-start\">\n            <div class=\"cursor-pointer flex-1\" onclick=${() => connectToSession(session.id, session.projectName)}>\n              <div class=\"flex items-center gap-2 mb-2\">\n                <h3 class=\"font-semibold text-sm\">${session.id}</h3>\n                <span class=\"badge badge-primary badge-sm\">${session.projectName}</span>\n              </div>\n              <p class=\"text-xs opacity-70 line-clamp-2 break-all\">Status: <span>${stripAnsiCodes(session.status)}</span></p>\n              <p class=\"text-xs opacity-50\">Created: ${new Date(session.created).toLocaleString()}</p>\n            </div>\n            <div class=\"flex gap-2\">\n              <button class=\"btn btn-primary btn-sm\" onclick=${() => connectToSession(session.id, session.projectName)}>Connect</button>\n              <button class=\"btn btn-error btn-sm\" onclick=${() => killSession(session.id)}>Kill</button>\n            </div>\n          </div>\n        </div>\n      </div>`;\n\n    const WorktreeItem = (projectName: string, worktree: any) => html`\n      <div class=\"bg-base-100 rounded-lg p-3 flex justify-between items-center\">\n        <div class=\"cursor-pointer flex-1\" onclick=${() => (window as any).openWorktree?.(projectName, worktree.name)}>\n          <div class=\"flex items-center gap-2\">\n            <span class=\"text-success\">\uD83C\uDF3F</span>\n            <span class=\"font-medium text-sm\">${worktree.name}</span>\n            <span class=\"badge badge-outline badge-xs\">${worktree.branch}</span>\n          </div>\n          <p class=\"text-xs opacity-60 mt-1\">${worktree.relativePath}</p>\n        </div>\n        <div class=\"flex gap-1\">\n          <button class=\"btn btn-xs btn-primary\" onclick=${() => (window as any).openWorktree?.(projectName, worktree.name)}>Open</button>\n          <button class=\"btn btn-xs btn-success\" onclick=${() => (window as any).mergeWorktree?.(projectName, worktree.name)}>Merge</button>\n          <button class=\"btn btn-xs btn-error\" onclick=${() => (window as any).deleteWorktree?.(projectName, worktree.name)}>Delete</button>\n        </div>\n      </div>`;\n\n    const ProjectCard = (project: any) => html`\n      <div class=\"card bg-base-300 shadow-lg\">\n        <div class=\"card-body p-4\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <div class=\"cursor-pointer flex-1\" onclick=${() => selectProject(project.name)}>\n              <h3 class=\"text-lg font-bold\">${project.name}</h3>\n            </div>\n            <div class=\"flex gap-2\">\n              <button class=\"btn btn-primary btn-sm\" onclick=${() => selectProject(project.name)}>Open Project</button>\n              <button class=\"btn btn-secondary btn-sm\" onclick=${() => (window as any).createWorktreeModal?.(project.name)}>+ Worktree</button>\n              <button class=\"btn btn-error btn-sm\" onclick=${() => deleteProject(project.name)}>Delete</button>\n            </div>\n          </div>\n          ${project.worktrees.length > 0\n            ? html`<div class=\"mt-3\">\n                <h4 class=\"text-sm font-semibold mb-2 opacity-80\">Worktrees:</h4>\n                <div class=\"grid gap-2\">\n                  ${project.worktrees.map((wt: any) => WorktreeItem(project.name, wt))}\n                </div>\n               </div>`\n            : html`<p class=\"text-xs opacity-50 mt-2\">No worktrees</p>`}\n        </div>\n      </div>`;\n\n    render(\n      terminalContainer,\n      html`<div class=\"p-6 max-w-6xl mx-auto h-full flex flex-col overflow-y-auto\">\n        <div class=\"flex items-center justify-between mb-8\">\n          <h1 class=\"text-3xl font-bold\">Shell Dashboard</h1>\n          <div class=\"flex gap-2\">\n            <button class=\"btn btn-outline btn-sm\" onclick=${() => (window as any).showEnvironmentManager?.()}><span class=\"text-lg\">\uD83C\uDF0D</span> Environment Variables</button>\n            <button class=\"btn btn-outline btn-sm\" onclick=${() => (window as any).showAliasesManager?.()}><span class=\"text-lg\">\u26A1</span> Shell Aliases</button>\n          </div>\n        </div>\n        <div class=\"mb-8\">\n          <h2 class=\"text-2xl font-semibold mb-4 flex items-center gap-2\"><span class=\"text-primary\">\uD83D\uDDA5\uFE0F</span> All Active Sessions</h2>\n          <div class=\"grid gap-3 mb-6\">\n            ${allSessions.length === 0 ? html`<p class=\"text-center opacity-70 py-4\">No active sessions</p>` : allSessions.map((s: any) => SessionCard(s))}\n          </div>\n        </div>\n        <div class=\"mb-8\">\n          <h2 class=\"text-2xl font-semibold mb-4 flex items-center gap-2\"><span class=\"text-secondary\">\uD83D\uDCC1</span> All Projects & Worktrees</h2>\n          <div class=\"mb-6\">\n            <div class=\"flex gap-2\">\n              <input type=\"text\" id=\"project-name\" placeholder=\"Enter project name\" class=\"input input-bordered flex-1\">\n              <button class=\"btn btn-primary\" onclick=${() => createNewProject()}>Create Project</button>\n            </div>\n          </div>\n          <div class=\"grid gap-4\">\n            ${projectsWithWorktrees.length === 0 ? html`<p class=\"text-center opacity-70 py-4\">No projects found</p>` : projectsWithWorktrees.map((p: any) => ProjectCard(p))}\n          </div>\n        </div>\n      </div>`\n    );\n  } catch (error) {\n    console.error('Failed to load sessions and projects:', error);\n    const terminalContainer = document.getElementById('terminal-container');\n    if (terminalContainer) {\n      terminalContainer.innerHTML = '<div class=\"p-6 text-center text-error\">Error loading sessions and projects</div>';\n    }\n  }\n}\n\nexport async function createNewProject(): Promise<void> {\n  const projectNameInput = document.getElementById('project-name') as HTMLInputElement | null;\n  const projectName = (projectNameInput?.value || '').trim();\n  if (!projectName) {\n    await (window as any).Swal.fire({ title: 'Error', text: 'Please enter a project name', icon: 'error' });\n    return;\n  }\n  try {\n    const response = await fetch('/api/projects', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: projectName })\n    });\n    const result = await response.json();\n    if (response.ok) {\n      selectProject(result.name);\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: result.error || 'Failed to create project', icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error creating project:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error creating project', icon: 'error' });\n  }\n}\n\nexport async function deleteProject(projectName: string): Promise<void> {\n  const result = await (window as any).Swal.fire({\n    title: 'Delete Project?',\n    text: `Are you sure you want to delete the project \"${projectName}\"? This action cannot be undone.`,\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#d33',\n    cancelButtonColor: '#3085d6',\n    confirmButtonText: 'Yes, delete it!'\n  });\n  if (!result.isConfirmed) return;\n  try {\n    const response = await fetch(`/api/projects/${encodeURIComponent(projectName)}`, { method: 'DELETE' });\n    const deleteResult = await response.json();\n    if (response.ok) {\n      await (window as any).Swal.fire({ title: 'Deleted!', text: deleteResult.message || 'Project deleted successfully', icon: 'success' });\n      showSessionsAndProjectsList();\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: deleteResult.error || 'Failed to delete project', icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error deleting project:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error deleting project', icon: 'error' });\n  }\n}\n\nexport function selectProject(projectName: string): void {\n  state.currentProject = projectName;\n  state.sessionID = null;\n  initializeTerminal();\n}\n\nexport function connectToSession(sessionId: string, projectName?: string | null): void {\n  if (typeof cleanupTerminal === 'function') cleanupTerminal();\n  state.sessionID = sessionId;\n  state.currentProject = projectName ?? state.currentProject;\n  if (typeof (window as any).updateURLWithSession === 'function')\n    (window as any).updateURLWithSession(sessionId, state.currentProject);\n  initializeTerminal();\n}\n\nexport async function killSession(sessionId: string): Promise<void> {\n  try {\n    const response = await fetch(`/api/sessions/${sessionId}`, { method: 'DELETE' });\n    const result = await response.json();\n    if (result.success) {\n      showSessionsAndProjectsList();\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: 'Failed to kill session: ' + result.message, icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error killing session:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error killing session', icon: 'error' });\n  }\n}\n\n\n", "import { state } from './state';\nimport { getProjectFromURL, getSessionIDFromURL } from './utils';\nimport {\n  closeFileBrowser,\n  closeFileEditor,\n  createNewFile,\n  createNewFolder,\n  handleFileCreation,\n  handleFolderCreation,\n  toggleFileBrowser,\n  saveCurrentFile,\n} from './files';\nimport { initializeTerminal, cleanupTerminal, resizeTerminal, getWebSocket } from './terminal';\nimport { goBackToProjectList, goBackToSessionList, showSessionsAndProjectsList } from './projects';\n\nexport function showNavigationBar(): void {\n  const navBar = document.getElementById('nav-bar');\n  if (navBar) {\n    navBar.classList.remove('hidden');\n    const currentPathSpan = document.getElementById('current-path');\n    if (currentPathSpan && state.currentProject) {\n      currentPathSpan.textContent = `Project: ${state.currentProject}`;\n    }\n  }\n}\n\nexport function hideNavigationBar(): void {\n  const navBar = document.getElementById('nav-bar');\n  navBar?.classList.add('hidden');\n}\n\nexport function setupGlobalUI(): void {\n  window.addEventListener('popstate', () => {\n    state.sessionID = getSessionIDFromURL();\n    state.currentProject = getProjectFromURL();\n    if (state.sessionID) initializeTerminal();\n    else showSessionsAndProjectsList();\n  });\n\n  document.addEventListener('DOMContentLoaded', () => {\n    const backToSessionsBtn = document.getElementById('back-to-sessions');\n    backToSessionsBtn?.addEventListener('click', () => {\n      cleanupTerminal();\n      if (state.currentProject) goBackToProjectList();\n      else goBackToSessionList();\n    });\n\n    const browseFilesBtn = document.getElementById('browse-files');\n    browseFilesBtn?.addEventListener('click', () => void toggleFileBrowser());\n    document.getElementById('close-browser')?.addEventListener('click', () => closeFileBrowser());\n    document.getElementById('new-folder')?.addEventListener('click', () => createNewFolder());\n    document.getElementById('new-file')?.addEventListener('click', () => createNewFile());\n\n    document.getElementById('create-file-btn')?.addEventListener('click', () => void handleFileCreation());\n    document.getElementById('cancel-file-btn')?.addEventListener('click', () => (document.getElementById('new-file-modal') as HTMLDialogElement | null)?.close());\n    document.getElementById('create-folder-btn')?.addEventListener('click', () => void handleFolderCreation());\n    document.getElementById('cancel-folder-btn')?.addEventListener('click', () => (document.getElementById('new-folder-modal') as HTMLDialogElement | null)?.close());\n\n    const newFileNameInput = document.getElementById('new-file-name');\n    newFileNameInput?.addEventListener('keypress', (e) => {\n      if ((e as KeyboardEvent).key === 'Enter') void handleFileCreation();\n    });\n    const newFolderNameInput = document.getElementById('new-folder-name');\n    newFolderNameInput?.addEventListener('keypress', (e) => {\n      if ((e as KeyboardEvent).key === 'Enter') void handleFolderCreation();\n    });\n\n    document.getElementById('save-file')?.addEventListener('click', () => void saveCurrentFile());\n    document.getElementById('close-editor')?.addEventListener('click', () => closeFileEditor());\n\n    const fileContentTextarea = document.getElementById('file-content');\n    fileContentTextarea?.addEventListener('keydown', (event) => {\n      const e = event as KeyboardEvent;\n      if ((e.ctrlKey || e.metaKey) && e.key === 's') {\n        e.preventDefault();\n        void saveCurrentFile();\n      }\n      if (e.key === 'Tab' && event.target instanceof HTMLTextAreaElement) {\n        e.preventDefault();\n        const start = event.target.selectionStart;\n        const end = event.target.selectionEnd;\n        const value = event.target.value;\n        event.target.value = value.substring(0, start) + '\\t' + value.substring(end);\n        event.target.selectionStart = event.target.selectionEnd = start + 1;\n      }\n    });\n\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape') {\n        if (state.isFileEditorOpen) closeFileEditor();\n        else if (state.isFileBrowserOpen) closeFileBrowser();\n      }\n    });\n\n    document.addEventListener('click', (event) => {\n      const fileBrowser = document.getElementById('file-browser');\n      const fileEditor = document.getElementById('file-editor');\n      if (\n        state.isFileBrowserOpen &&\n        fileBrowser &&\n        !fileBrowser.contains(event.target as Node) &&\n        !(event.target as HTMLElement).closest('#browse-files')\n      ) {\n        closeFileBrowser();\n      }\n      if (state.isFileEditorOpen && fileEditor && !fileEditor.contains(event.target as Node)) {\n        if (!(event.target as HTMLElement).closest('.file-item')) closeFileEditor();\n      }\n    });\n\n    const fileBrowser = document.getElementById('file-browser');\n    fileBrowser?.addEventListener('click', (event) => event.stopPropagation());\n    const fileEditor = document.getElementById('file-editor');\n    fileEditor?.addEventListener('click', (event) => event.stopPropagation());\n\n    setupVirtualKeyboard();\n    setupCustomCommandInput();\n  });\n\n  window.addEventListener('resize', () => resizeTerminal());\n\n  document.addEventListener('visibilitychange', () => {\n    const terminal = (window as any).terminalInstance as any | undefined;\n    if (!document.hidden && terminal) {\n      terminal.focus?.();\n      if (!state.isConnected) {\n        const ws = getWebSocket();\n        if (!ws || ws.readyState !== WebSocket.OPEN) {\n          // reconnect\n          (window as any).connectWebSocket?.();\n        }\n      }\n    } else if (document.hidden) {\n      const ws = getWebSocket();\n      if (ws && ws.readyState === WebSocket.OPEN) ws.close();\n    }\n  });\n\n  document.addEventListener('click', (event) => {\n    const customInputContainer = document.getElementById('custom-input-container');\n    if (customInputContainer && !customInputContainer.contains(event.target as Node)) {\n      const t = (window as any).terminalInstance as any | undefined;\n      t?.focus?.();\n    }\n  });\n\n  window.addEventListener('beforeunload', () => cleanupTerminal());\n}\n\nexport function setupCustomCommandInput(): void {\n  const customCommandInput = document.getElementById('custom-command-input') as HTMLTextAreaElement | null;\n  if (!customCommandInput) return;\n  let commandHistory: string[] = JSON.parse(localStorage.getItem('terminalCommandHistory') || '[]');\n  let historyIndex = -1;\n  let currentInput = '';\n  let suggestionsList: HTMLDivElement | null = null;\n\n  const saveToHistory = (command: string) => {\n    if (command && command.trim()) {\n      const index = commandHistory.indexOf(command);\n      if (index > -1) commandHistory.splice(index, 1);\n      commandHistory.unshift(command);\n      if (commandHistory.length > 100) commandHistory = commandHistory.slice(0, 100);\n      localStorage.setItem('terminalCommandHistory', JSON.stringify(commandHistory));\n    }\n  };\n\n  const createSuggestionsDropdown = () => {\n    suggestionsList?.remove();\n    suggestionsList = document.createElement('div');\n    suggestionsList.className = 'absolute bottom-full left-0 right-0 bg-base-200 border border-base-300 rounded-t-lg max-h-40 overflow-y-auto z-50 hidden';\n    suggestionsList.style.marginBottom = '2px';\n    const container = customCommandInput.parentElement as HTMLElement;\n    container.style.position = 'relative';\n    container.appendChild(suggestionsList);\n    return suggestionsList;\n  };\n\n  const showSuggestions = (input: string) => {\n    if (!suggestionsList) createSuggestionsDropdown();\n    const filtered = commandHistory.filter((cmd) => cmd.toLowerCase().includes(input.toLowerCase()) && cmd !== input).slice(0, 5);\n    if (filtered.length === 0) {\n      suggestionsList!.classList.add('hidden');\n      return;\n    }\n    suggestionsList!.innerHTML = '';\n    filtered.forEach((cmd) => {\n      const item = document.createElement('div');\n      item.className = 'px-3 py-2 cursor-pointer hover:bg-base-300 text-sm';\n      item.textContent = cmd;\n      item.addEventListener('click', () => {\n        customCommandInput.value = cmd;\n        suggestionsList!.classList.add('hidden');\n        customCommandInput.focus();\n      });\n      suggestionsList!.appendChild(item);\n    });\n    suggestionsList!.classList.remove('hidden');\n  };\n\n  const hideSuggestions = () => {\n    suggestionsList?.classList.add('hidden');\n  };\n\n  const sendCommand = () => {\n    const ws = getWebSocket();\n    const command = (customCommandInput.value || '').trim();\n    if (!command || !ws) return;\n    saveToHistory(command);\n    historyIndex = -1;\n    currentInput = '';\n    hideSuggestions();\n    (window as any).terminalInstance?.focus?.();\n    setTimeout(() => {\n      if (state.isConnected && ws && ws.readyState === WebSocket.OPEN) {\n        ws.send(JSON.stringify({ type: 'input', data: command }));\n        setTimeout(() => {\n          ws.send(JSON.stringify({ type: 'input', data: '\\r' }));\n        }, 50);\n        customCommandInput.value = '';\n        customCommandInput.style.height = 'auto';\n        customCommandInput.rows = 1;\n        setTimeout(() => customCommandInput.focus(), 100);\n      }\n    }, 50);\n  };\n\n  customCommandInput.addEventListener('keydown', (event) => {\n    const e = event as KeyboardEvent;\n    if (e.key === 'Enter') {\n      if (e.shiftKey) {\n        setTimeout(() => {\n          customCommandInput.style.height = 'auto';\n          customCommandInput.style.height = Math.min(customCommandInput.scrollHeight, 120) + 'px';\n        }, 0);\n      } else {\n        e.preventDefault();\n        sendCommand();\n      }\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      if (historyIndex === -1) currentInput = customCommandInput.value;\n      if (historyIndex < commandHistory.length - 1) {\n        historyIndex++;\n        customCommandInput.value = commandHistory[historyIndex];\n        hideSuggestions();\n      }\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      if (historyIndex > 0) {\n        historyIndex--;\n        customCommandInput.value = commandHistory[historyIndex];\n        hideSuggestions();\n      } else if (historyIndex === 0) {\n        historyIndex = -1;\n        customCommandInput.value = currentInput;\n        hideSuggestions();\n      }\n    } else if (e.key === 'Escape') {\n      hideSuggestions();\n      historyIndex = -1;\n      currentInput = '';\n    }\n  });\n\n  customCommandInput.addEventListener('input', () => {\n    customCommandInput.style.height = 'auto';\n    customCommandInput.style.height = Math.min(customCommandInput.scrollHeight, 120) + 'px';\n    historyIndex = -1;\n    currentInput = customCommandInput.value;\n    const input = customCommandInput.value.trim();\n    if (input.length > 0) showSuggestions(input);\n    else hideSuggestions();\n  });\n\n  customCommandInput.addEventListener('blur', () => {\n    if (!customCommandInput.value.trim()) {\n      customCommandInput.style.height = 'auto';\n      customCommandInput.rows = 1;\n    }\n    setTimeout(() => hideSuggestions(), 200);\n  });\n\n  customCommandInput.addEventListener('focus', () => {\n    const input = customCommandInput.value.trim();\n    if (input.length > 0) showSuggestions(input);\n  });\n\n  createSuggestionsDropdown();\n  document.addEventListener('click', (event) => {\n    if (!customCommandInput.contains(event.target as Node) && (!suggestionsList || !suggestionsList.contains(event.target as Node))) {\n      hideSuggestions();\n    }\n  });\n}\n\nexport function setupVirtualKeyboard(): void {\n  const virtualKeyboard = document.getElementById('virtual-keyboard');\n  virtualKeyboard?.addEventListener('click', async (event) => {\n    const button = (event.target as HTMLElement).closest('button[data-key-code]') as HTMLButtonElement | null;\n    if (!button) return;\n    const keyCode = parseInt(button.dataset.keyCode || '0', 10);\n    let data = '';\n    switch (keyCode) {\n      case 27:\n        data = '\\x1B';\n        break;\n      case 9:\n        data = '\\x09';\n        break;\n      case 17: {\n        const res = await (window as any).Swal.fire({\n          title: 'Ctrl Key Combination',\n          input: 'text',\n          inputLabel: 'Enter next key for Ctrl combination',\n          inputPlaceholder: \"e.g., 'c' for Ctrl+C, 'z' for Ctrl+Z\",\n          showCancelButton: true,\n          inputValidator: (value: string) => (!value ? 'You need to enter a key!' : undefined),\n        });\n        const nextKey = res.value as string | undefined;\n        if (nextKey) {\n          const charCode = nextKey.toLowerCase().charCodeAt(0);\n          if (charCode >= 97 && charCode <= 122) data = String.fromCharCode(charCode - 96);\n          else if (nextKey === '[') data = '\\x1B';\n          else if (nextKey === '\\\\') data = '\\x1C';\n          else if (nextKey === ']') data = '\\x1D';\n          else if (nextKey === '^') data = '\\x1E';\n          else if (nextKey === '_') data = '\\x1F';\n        }\n        break;\n      }\n      case 3:\n        data = '\\x03';\n        break;\n      case 38:\n        data = '\\x1B[A';\n        break;\n      case 40:\n        data = '\\x1B[B';\n        break;\n      case 37:\n        data = '\\x1B[D';\n        break;\n      case 39:\n        data = '\\x1B[C';\n        break;\n      default:\n        break;\n    }\n    const ws = getWebSocket();\n    if (state.isConnected && data && ws) {\n      (window as any).terminalInstance?.focus?.();\n      setTimeout(() => ws.send(JSON.stringify({ type: 'input', data })), 50);\n    }\n  });\n}\n\n\n", "import { html, render } from 'uhtml';\n\nlet autoSaveTimeout: number | null = null;\nlet hasUnsavedChanges = false;\n\nexport async function showEnvironmentManager(): Promise<void> {\n  try {\n    const response = await fetch('/api/environment');\n    const data = await response.json();\n    const terminalContainer = document.getElementById('terminal-container');\n    if (!terminalContainer) return;\n\n    let saveStatus = 'Loaded';\n    let textValue: string = data.text || '';\n\n    const setStatus = (status: string) => {\n      saveStatus = status;\n      update();\n      if (status.includes('Saved') || status.includes('failed') || status.includes('error')) {\n        setTimeout(() => {\n          if (saveStatus === status) {\n            saveStatus = '';\n            update();\n          }\n        }, 3000);\n      }\n    };\n\n    const saveEnvironmentVariables = async () => {\n      try {\n        setStatus('Saving...');\n        const response = await fetch('/api/environment', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: textValue })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          hasUnsavedChanges = false;\n          setStatus(`Saved (${Object.keys(result.variables).length} variables)`);\n          if (autoSaveTimeout) {\n            window.clearTimeout(autoSaveTimeout);\n            autoSaveTimeout = null;\n          }\n        } else {\n          const error = await response.json();\n          console.error('Failed to save environment variables:', error);\n          setStatus('Save failed');\n        }\n      } catch (e) {\n        console.error('Error saving environment variables:', e);\n        setStatus('Save error');\n      }\n    };\n\n    const onInput = (e: Event) => {\n      const target = e.target as HTMLTextAreaElement;\n      textValue = target.value;\n      hasUnsavedChanges = true;\n      setStatus('Unsaved changes...');\n      if (autoSaveTimeout) window.clearTimeout(autoSaveTimeout);\n      autoSaveTimeout = window.setTimeout(async () => {\n        await saveEnvironmentVariables();\n      }, 2000);\n    };\n\n    const onClearAll = async () => {\n      if (confirm('Are you sure you want to clear all environment variables?')) {\n        textValue = '';\n        hasUnsavedChanges = true;\n        update();\n        await saveEnvironmentVariables();\n      }\n    };\n\n    const onBack = async () => {\n      if (hasUnsavedChanges) await saveEnvironmentVariables();\n      (window as any).showSessionsAndProjectsList?.();\n    };\n\n    const statusClass = () => {\n      const base = 'text-sm transition-colors duration-200 ';\n      if (saveStatus.includes('Saved')) return base + 'text-success';\n      if (saveStatus.includes('Saving')) return base + 'text-warning';\n      if (saveStatus.includes('failed') || saveStatus.includes('error')) return base + 'text-error';\n      return base + 'opacity-70';\n    };\n\n    const view = () => html`<div class=\"p-6 max-w-4xl mx-auto h-full flex flex-col\">\n      <div class=\"flex items-center justify-between mb-6\">\n        <h1 class=\"text-3xl font-bold\">Global Environment Variables</h1>\n        <div class=\"flex gap-2\">\n          <span class=${statusClass()}>${saveStatus}</span>\n          <button class=\"btn btn-outline\" onclick=${onBack}>\u2190 Back to Dashboard</button>\n        </div>\n      </div>\n      <div class=\"bg-base-200 rounded-lg p-4 mb-6\">\n        <p class=\"text-sm opacity-70 mb-2\">Edit environment variables in KEY=VALUE format. Comments starting with # are ignored. These variables will be available in all new terminal sessions across all projects. Changes are automatically saved as you type.</p>\n        <p class=\"text-xs opacity-50\">Example: NODE_ENV=production</p>\n      </div>\n      <div class=\"bg-base-100 rounded-lg border border-base-300 flex-1 flex flex-col\">\n        <div class=\"flex items-center justify-between p-4 border-b border-base-300\">\n          <h2 class=\"text-xl font-semibold\">Environment Variables</h2>\n          <div class=\"flex gap-2\">\n            <button class=\"btn btn-error btn-sm\" onclick=${onClearAll}>Clear All</button>\n            <button class=\"btn btn-primary btn-sm\" onclick=${saveEnvironmentVariables}>Save Now</button>\n          </div>\n        </div>\n        <div class=\"flex-1 p-4\">\n          <textarea class=\"textarea textarea-bordered w-full h-full resize-none font-mono text-sm\" placeholder=\"# Add your environment variables here\\n# Format: KEY=VALUE\\n# Example:\\nNODE_ENV=production\\nAPI_URL=https://api.example.com\\nDEBUG=true\" spellcheck=\"false\" oninput=${onInput}>${textValue}</textarea>\n        </div>\n      </div>\n    </div>`;\n\n    const update = () => render(terminalContainer, view());\n    update();\n\n    window.addEventListener('beforeunload', async () => {\n      if (hasUnsavedChanges) await saveEnvironmentVariables();\n    });\n  } catch (error) {\n    console.error('Error loading environment variables:', error);\n    alert('Failed to load environment variables');\n  }\n}\n\n\n", "import { html, render } from 'uhtml';\n\nlet aliasAutoSaveTimeout: number | null = null;\nlet aliasHasUnsavedChanges = false;\n\nexport async function showAliasesManager(): Promise<void> {\n  try {\n    const response = await fetch('/api/aliases');\n    const data = await response.json();\n    const terminalContainer = document.getElementById('terminal-container');\n    if (!terminalContainer) return;\n\n    let saveStatus = 'Loaded';\n    let textValue: string = data.text || '';\n\n    const setStatus = (status: string) => {\n      saveStatus = status;\n      update();\n      if (status.includes('Saved') || status.includes('failed') || status.includes('error')) {\n        setTimeout(() => {\n          if (saveStatus === status) {\n            saveStatus = '';\n            update();\n          }\n        }, 3000);\n      }\n    };\n\n    const saveAliases = async () => {\n      try {\n        setStatus('Saving...');\n        const response = await fetch('/api/aliases', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: textValue })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          aliasHasUnsavedChanges = false;\n          setStatus(`Saved (${result.aliasCount || 0} aliases)`);\n          if (aliasAutoSaveTimeout) {\n            window.clearTimeout(aliasAutoSaveTimeout);\n            aliasAutoSaveTimeout = null;\n          }\n        } else {\n          const error = await response.json();\n          console.error('Failed to save aliases:', error);\n          setStatus('Save failed');\n          if (error.details && error.details.length > 0) alert('Save failed:\\n' + error.details.join('\\n'));\n        }\n      } catch (e) {\n        console.error('Error saving aliases:', e);\n        setStatus('Save error');\n      }\n    };\n\n    const onInput = (e: Event) => {\n      const target = e.target as HTMLTextAreaElement;\n      textValue = target.value;\n      aliasHasUnsavedChanges = true;\n      setStatus('Unsaved changes...');\n      if (aliasAutoSaveTimeout) window.clearTimeout(aliasAutoSaveTimeout);\n      aliasAutoSaveTimeout = window.setTimeout(async () => {\n        await saveAliases();\n      }, 2000);\n    };\n\n    const onClearAll = async () => {\n      if (confirm('Are you sure you want to clear all aliases? This will remove all MyShell24-managed aliases from your .zshrc file.')) {\n        textValue = '';\n        aliasHasUnsavedChanges = true;\n        update();\n        await saveAliases();\n      }\n    };\n\n    const onBack = async () => {\n      if (aliasHasUnsavedChanges) await saveAliases();\n      (window as any).showSessionsAndProjectsList?.();\n    };\n\n    const statusClass = () => {\n      const base = 'text-sm transition-colors duration-200 ';\n      if (saveStatus.includes('Saved')) return base + 'text-success';\n      if (saveStatus.includes('Saving')) return base + 'text-warning';\n      if (saveStatus.includes('failed') || saveStatus.includes('error')) return base + 'text-error';\n      return base + 'opacity-70';\n    };\n\n    const view = () => html`<div class=\"p-6 max-w-4xl mx-auto h-full flex flex-col\">\n      <div class=\"flex items-center justify-between mb-6\">\n        <h1 class=\"text-3xl font-bold\">Shell Aliases Manager</h1>\n        <div class=\"flex gap-2\">\n          <span class=${statusClass()}>${saveStatus}</span>\n          <button class=\"btn btn-outline\" onclick=${onBack}>\u2190 Back to Dashboard</button>\n        </div>\n      </div>\n      <div class=\"bg-base-200 rounded-lg p-4 mb-6\">\n        <p class=\"text-sm opacity-70 mb-2\">Create and manage zsh shell aliases. Aliases are stored in your ~/.zshrc file. Use the format: <code>alias name='command'</code> or just <code>name=command</code> (auto-formatted). Changes are automatically saved and will be available in new terminal sessions.</p>\n        <p class=\"text-xs opacity-50 mb-2\">Examples:<br>\u2022 <code>alias ll='ls -la'</code><br>\u2022 <code>alias gs='git status'</code><br>\u2022 <code>alias ..='cd ..'</code></p>\n        <div class=\"text-xs opacity-50\">\n          <strong>Location:</strong> ${data.zshrcPath || '~/.zshrc'}\n          ${data.hasZshrc ? html`<span class=\"text-success\">\u2713 Found</span>` : html`<span class=\"text-warning\">\u26A0 Will be created</span>`}\n        </div>\n      </div>\n      <div class=\"bg-base-100 rounded-lg border border-base-300 flex-1 flex flex-col\">\n        <div class=\"flex items-center justify-between p-4 border-b border-base-300\">\n          <h2 class=\"text-xl font-semibold\">Shell Aliases</h2>\n          <div class=\"flex gap-2\">\n            <button class=\"btn btn-error btn-sm\" onclick=${onClearAll}>Clear All</button>\n            <button class=\"btn btn-primary btn-sm\" onclick=${saveAliases}>Save Now</button>\n          </div>\n        </div>\n        <div class=\"flex-1 p-4\">\n          <textarea class=\"textarea textarea-bordered w-full h-full resize-none font-mono text-sm\" placeholder=\"# Add your shell aliases here\\n# Format: alias name='command' or just name=command\\n# Examples:\\nalias ll='ls -la'\\nalias gs='git status'\\nalias ..='cd ..'\\nalias grep='grep --color=auto'\\nalias h='history'\\nalias c='clear'\" spellcheck=\"false\" oninput=${onInput}>${textValue}</textarea>\n        </div>\n      </div>\n    </div>`;\n\n    const update = () => render(terminalContainer, view());\n    update();\n\n    window.addEventListener('beforeunload', async () => {\n      if (aliasHasUnsavedChanges) await saveAliases();\n    });\n  } catch (error) {\n    console.error('Error loading aliases:', error);\n    alert('Failed to load aliases');\n  }\n}\n\n\n", "import { state } from './state';\n\nexport function createWorktreeModal(projectName: string): void {\n  const existing = document.getElementById('new-worktree-modal') as HTMLDialogElement | null;\n  if (!existing) {\n    const modalHTML = `\n      <dialog id=\"new-worktree-modal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Create New Worktree</h3>\n          <div class=\"py-4\">\n            <div class=\"mb-4\">\n              <label class=\"label\"><span class=\"label-text\">Worktree Name</span></label>\n              <input type=\"text\" id=\"new-worktree-name\" placeholder=\"Enter worktree name...\" class=\"input input-bordered w-full\" />\n            </div>\n            <div class=\"mb-4\">\n              <label class=\"label\"><span class=\"label-text\">Branch Name (optional)</span></label>\n              <input type=\"text\" id=\"new-worktree-branch\" placeholder=\"Enter new branch name...\" class=\"input input-bordered w-full\" />\n              <div class=\"label\"><span class=\"label-text-alt\">Leave empty to checkout existing branch</span></div>\n            </div>\n          </div>\n          <div class=\"modal-action\">\n            <button id=\"create-worktree-btn\" class=\"btn btn-secondary\">Create Worktree</button>\n            <button id=\"cancel-worktree-btn\" class=\"btn\">Cancel</button>\n          </div>\n        </div>\n        <form method=\"dialog\" class=\"modal-backdrop\"><button>close</button></form>\n      </dialog>`;\n    document.body.insertAdjacentHTML('beforeend', modalHTML);\n    document.getElementById('create-worktree-btn')?.addEventListener('click', () => handleWorktreeCreation(projectName));\n    document.getElementById('cancel-worktree-btn')?.addEventListener('click', () => (document.getElementById('new-worktree-modal') as HTMLDialogElement | null)?.close());\n    const worktreeNameInput = document.getElementById('new-worktree-name');\n    const worktreeBranchInput = document.getElementById('new-worktree-branch');\n    worktreeNameInput?.addEventListener('keypress', (e) => {\n      if ((e as KeyboardEvent).key === 'Enter') handleWorktreeCreation(projectName);\n    });\n    worktreeBranchInput?.addEventListener('keypress', (e) => {\n      if ((e as KeyboardEvent).key === 'Enter') handleWorktreeCreation(projectName);\n    });\n  }\n  (document.getElementById('new-worktree-name') as HTMLInputElement | null)!.value = '';\n  (document.getElementById('new-worktree-branch') as HTMLInputElement | null)!.value = '';\n  (document.getElementById('new-worktree-modal') as HTMLDialogElement | null)?.showModal();\n  (document.getElementById('new-worktree-name') as HTMLInputElement | null)?.focus();\n}\n\nexport async function handleWorktreeCreation(projectName: string): Promise<void> {\n  const nameInput = document.getElementById('new-worktree-name') as HTMLInputElement | null;\n  const branchInput = document.getElementById('new-worktree-branch') as HTMLInputElement | null;\n  const name = (nameInput?.value || '').trim();\n  const branch = (branchInput?.value || '').trim();\n  if (!name) {\n    await (window as any).Swal.fire({ title: 'Error', text: 'Please enter a worktree name', icon: 'error' });\n    return;\n  }\n  try {\n    const response = await fetch(`/api/projects/${encodeURIComponent(projectName)}/worktrees`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name, branch: branch || undefined })\n    });\n    const result = await response.json();\n    if (response.ok) {\n      (document.getElementById('new-worktree-modal') as HTMLDialogElement | null)?.close();\n      (window as any).showSessionsAndProjectsList?.();\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: result.error || 'Failed to create worktree', icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error creating worktree:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error creating worktree', icon: 'error' });\n  }\n}\n\nexport function openWorktree(projectName: string, worktreeName: string): void {\n  state.sessionID = null;\n  state.currentProject = `${projectName}/worktrees/${worktreeName}`;\n  (window as any).initializeTerminal?.();\n}\n\nexport async function mergeWorktree(projectName: string, worktreeName: string): Promise<void> {\n  const { value: targetBranch } = await (window as any).Swal.fire({\n    title: 'Enter target branch',\n    input: 'text',\n    inputLabel: 'Target branch to merge into',\n    inputValue: 'main',\n    showCancelButton: true,\n    inputValidator: (value: string) => (!value ? 'You need to enter a branch name!' : undefined),\n  });\n  if (!targetBranch) return;\n  const confirmResult = await (window as any).Swal.fire({\n    title: 'Confirm merge',\n    text: `Are you sure you want to merge worktree \"${worktreeName}\" into \"${targetBranch}\"? This will also delete the worktree.`,\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes, merge it!'\n  });\n  if (!confirmResult.isConfirmed) return;\n  try {\n    const response = await fetch(`/api/projects/${encodeURIComponent(projectName)}/worktrees/${encodeURIComponent(worktreeName)}/merge`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ targetBranch: targetBranch || 'main' })\n    });\n    const result = await response.json();\n    if (response.ok) {\n      await (window as any).Swal.fire({ title: 'Success!', text: result.message || 'Worktree merged successfully', icon: 'success' });\n      (window as any).showSessionsAndProjectsList?.();\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: result.error || 'Failed to merge worktree', icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error merging worktree:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error merging worktree', icon: 'error' });\n  }\n}\n\nexport async function deleteWorktree(projectName: string, worktreeName: string): Promise<void> {\n  const confirmResult = await (window as any).Swal.fire({\n    title: 'Delete Worktree',\n    text: `Are you sure you want to delete worktree \"${worktreeName}\"? This action cannot be undone.`,\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#d33',\n    cancelButtonColor: '#3085d6',\n    confirmButtonText: 'Yes, delete it!',\n    cancelButtonText: 'Cancel'\n  });\n  if (!confirmResult.isConfirmed) return;\n  try {\n    const response = await fetch(`/api/projects/${encodeURIComponent(projectName)}/worktrees/${encodeURIComponent(worktreeName)}`, { method: 'DELETE' });\n    const result = await response.json();\n    if (response.ok) {\n      await (window as any).Swal.fire({ title: 'Success!', text: result.message || 'Worktree deleted successfully', icon: 'success' });\n      (window as any).showSessionsAndProjectsList?.();\n    } else {\n      await (window as any).Swal.fire({ title: 'Error', text: result.error || 'Failed to delete worktree', icon: 'error' });\n    }\n  } catch (error) {\n    console.error('Error deleting worktree:', error);\n    await (window as any).Swal.fire({ title: 'Error', text: 'Error deleting worktree', icon: 'error' });\n  }\n}\n\n\n", "// Entry point to wire up modules and expose required globals for inline handlers\nimport { getProjectFromURL, getSessionIDFromURL, updateURLWithSession, clearURLParams, updateURLWithoutSession } from './utils';\nimport { state } from './state';\nimport { initializeTerminal, cleanupTerminal, connectWebSocket } from './terminal';\nimport { showNavigationBar, hideNavigationBar, setupGlobalUI } from './ui';\nimport {\n  goBackToProjectList,\n  goBackToSessionList,\n  showSessionsAndProjectsList,\n  createNewProject,\n  deleteProject,\n  selectProject,\n  connectToSession,\n  killSession\n} from './projects';\nimport {\n  toggleFileBrowser,\n  loadDirectory,\n  openFileInEditor,\n  saveCurrentFile,\n  closeFileBrowser,\n  closeFileEditor,\n  createNewFile,\n  createNewFolder,\n  handleFileCreation,\n  handleFolderCreation,\n} from './files';\nimport { showEnvironmentManager } from './environment';\nimport { showAliasesManager } from './aliases';\nimport { createWorktreeModal, openWorktree, mergeWorktree, deleteWorktree } from './worktrees';\n\n// Expose selected functions to window for existing onclick attributes\nObject.assign(window as any, {\n  // utils\n  getSessionIDFromURL,\n  getProjectFromURL,\n  updateURLWithSession,\n  clearURLParams,\n  updateURLWithoutSession,\n  // terminal\n  initializeTerminal,\n  cleanupTerminal,\n  connectWebSocket,\n  // ui\n  showNavigationBar,\n  hideNavigationBar,\n  // projects\n  goBackToProjectList,\n  goBackToSessionList,\n  showSessionsAndProjectsList,\n  createNewProject,\n  deleteProject,\n  selectProject,\n  connectToSession,\n  killSession,\n  // files\n  toggleFileBrowser,\n  loadDirectory,\n  openFileInEditor,\n  saveCurrentFile,\n  closeFileBrowser,\n  closeFileEditor,\n  createNewFile,\n  createNewFolder,\n  handleFileCreation,\n  handleFolderCreation,\n  // environment & aliases\n  showEnvironmentManager,\n  showAliasesManager,\n  // worktrees\n  createWorktreeModal,\n  openWorktree,\n  mergeWorktree,\n  deleteWorktree,\n});\n\n// Initialize shared state from URL and choose screen\nstate.sessionID = getSessionIDFromURL();\nstate.currentProject = getProjectFromURL();\n\nsetupGlobalUI();\n\nif (state.sessionID) initializeTerminal();\nelse showSessionsAndProjectsList();\n\n\n"],
  "mappings": "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AQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAA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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "h", "c", "l", "d", "AccessibilityManager", "Disposable", "_terminal", "super", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "document", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "_", "u", "f", "g", "m", "S", "C", "b", "w", "E", "k", "L", "D", "R", "A", "B", "T", "M", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "P", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "p", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "IInstantiationService", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isCursorHidden", "isFocused", "isDim", "isInvisible", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "$", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "body", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "root", "factory", "exports", "module", "define", "amd", "self", "e", "t", "terminal", "this", "_terminal", "dispose", "fit", "dims", "proposeDimensions", "isNaN", "cols", "rows", "core", "_core", "_renderService", "clear", "resize", "element", "parentElement", "dimensions", "css", "cell", "width", "height", "scrollbarWidth", "options", "scrollback", "viewport", "scrollBarWidth", "parentElementStyle", "window", "getComputedStyle", "parentElementHeight", "parseInt", "getPropertyValue", "parentElementWidth", "Math", "max", "elementStyle", "availableHeight", "availableWidth", "floor", "stripAnsiCodes", "text", "getSessionIDFromURL", "getProjectFromURL", "updateURLWithSession", "sessionId", "projectName", "url", "clearURLParams", "updateURLWithoutSession", "state", "import_xterm", "import_xterm_addon_fit", "terminal", "fitAddon", "ws", "reconnectAttempts", "MAX_RECONNECT_ATTEMPTS", "RECONNECT_BASE_DELAY_MS", "cleanupWebSocket", "state", "cleanupTerminal", "connectWebSocket", "cleanupWebSocket", "url", "params", "state", "ws", "reconnectAttempts", "terminal", "event", "message", "updateURLWithSession", "e", "MAX_RECONNECT_ATTEMPTS", "delay", "RECONNECT_BASE_DELAY_MS", "initializeTerminal", "container", "fitAddon", "element", "data", "showNavigationBar", "resizeTerminal", "getWebSocket", "e", "t", "n", "s", "i", "r", "o", "l", "a", "c", "y", "w", "h", "D", "u", "d", "f", "p", "v", "g", "b", "T", "x", "e", "t", "u", "s", "d", "n", "v", "D", "y", "a", "l", "w", "S", "o", "k", "p", "h", "T", "e", "w", "c", "u", "s", "t", "r", "f", "k", "D", "i", "O", "$", "e", "t", "v", "W", "E", "W", "e", "b", "R", "e", "t", "O", "E", "W", "b", "_", "e", "R", "j", "F", "P", "B", "J", "V", "H", "e", "q", "G", "I", "K", "J", "Q", "U", "t", "X", "n", "Y", "Z", "ee", "te", "ne", "se", "ie", "s", "i", "r", "o", "re", "oe", "le", "ae", "ce", "ue", "de", "fe", "pe", "he", "ve", "ge", "be", "me", "xe", "ye", "we", "Se", "ke", "Ce", "Te", "P", "De", "Oe", "Ne", "$e", "We", "B", "Ae", "Ee", "l", "a", "c", "u", "d", "Me", "Re", "Le", "W", "_e", "je", "Fe", "Pe", "Be", "Je", "Ve", "ze", "He", "qe", "Ge", "Ie", "Ke", "Qe", "R", "_", "Ze", "Ue", "Xe", "x", "Ye", "et", "_et", "f", "p", "tt", "nt", "st", "h", "v", "g", "b", "m", "y", "j", "V", "F", "it", "rt", "ot", "lt", "at", "ut", "e", "t", "n", "lt", "i", "qe", "r", "d", "s", "v", "g", "D", "et", "Ie", "xe", "toggleFileBrowser", "fileBrowser", "state", "initialPath", "loadDirectory", "dirPath", "response", "data", "displayDirectoryContents", "currentDirInput", "error", "fileList", "Item", "item", "at", "openFileInEditor", "ut", "i", "openFileInEditor", "filePath", "response", "data", "state", "fileEditor", "fileContent", "editorFilename", "error", "saveCurrentFile", "content", "saveButton", "originalText", "closeFileEditor", "closeFileBrowser", "fileBrowser", "createNewFile", "modal", "input", "createNewFolder", "handleFileCreation", "fileName", "loadDirectory", "handleFolderCreation", "folderName", "folderPath", "goBackToSessionList", "state", "showSessionsAndProjectsList", "goBackToProjectList", "hideNavigationBar", "sessionsResponse", "projectsResponse", "allSessions", "projectsWithWorktrees", "terminalContainer", "SessionCard", "session", "at", "connectToSession", "stripAnsiCodes", "killSession", "WorktreeItem", "projectName", "worktree", "ProjectCard", "project", "selectProject", "deleteProject", "wt", "ut", "s", "createNewProject", "p", "error", "response", "result", "deleteResult", "initializeTerminal", "sessionId", "cleanupTerminal", "showNavigationBar", "navBar", "currentPathSpan", "state", "hideNavigationBar", "setupGlobalUI", "getSessionIDFromURL", "getProjectFromURL", "initializeTerminal", "showSessionsAndProjectsList", "cleanupTerminal", "goBackToProjectList", "goBackToSessionList", "toggleFileBrowser", "closeFileBrowser", "createNewFolder", "createNewFile", "handleFileCreation", "handleFolderCreation", "e", "saveCurrentFile", "closeFileEditor", "event", "start", "end", "value", "fileBrowser", "fileEditor", "setupVirtualKeyboard", "setupCustomCommandInput", "resizeTerminal", "terminal", "ws", "getWebSocket", "customInputContainer", "customCommandInput", "commandHistory", "historyIndex", "currentInput", "suggestionsList", "saveToHistory", "command", "index", "createSuggestionsDropdown", "container", "showSuggestions", "input", "filtered", "cmd", "item", "hideSuggestions", "sendCommand", "button", "keyCode", "data", "nextKey", "charCode", "autoSaveTimeout", "hasUnsavedChanges", "showEnvironmentManager", "data", "terminalContainer", "saveStatus", "textValue", "setStatus", "status", "update", "saveEnvironmentVariables", "response", "result", "error", "e", "onInput", "onClearAll", "onBack", "statusClass", "base", "view", "at", "ut", "aliasAutoSaveTimeout", "aliasHasUnsavedChanges", "showAliasesManager", "data", "terminalContainer", "saveStatus", "textValue", "setStatus", "status", "update", "saveAliases", "response", "result", "error", "e", "onInput", "onClearAll", "onBack", "statusClass", "base", "view", "at", "ut", "createWorktreeModal", "projectName", "handleWorktreeCreation", "worktreeNameInput", "worktreeBranchInput", "e", "nameInput", "branchInput", "name", "branch", "response", "result", "error", "openWorktree", "worktreeName", "state", "mergeWorktree", "targetBranch", "value", "deleteWorktree", "getSessionIDFromURL", "getProjectFromURL", "updateURLWithSession", "clearURLParams", "updateURLWithoutSession", "initializeTerminal", "cleanupTerminal", "connectWebSocket", "showNavigationBar", "hideNavigationBar", "goBackToProjectList", "goBackToSessionList", "showSessionsAndProjectsList", "createNewProject", "deleteProject", "selectProject", "connectToSession", "killSession", "toggleFileBrowser", "loadDirectory", "openFileInEditor", "saveCurrentFile", "closeFileBrowser", "closeFileEditor", "createNewFile", "createNewFolder", "handleFileCreation", "handleFolderCreation", "showEnvironmentManager", "showAliasesManager", "createWorktreeModal", "openWorktree", "mergeWorktree", "deleteWorktree", "state", "setupGlobalUI"]
}
